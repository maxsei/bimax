# Cannot build c-shared libraries cross platform without access to the
# platforms c compiler toolchain.  Had to stop working on this today.  Check
# out the following links:
# https://stackoverflow.com/questions/65843413/cross-compile-a-shared-library-under-linux-for-windows
# https://openprivacy.ca/discreet-log/09-flutter-with-native-go-libraries/
# https://github.com/multiarch/crossbuild
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub release
        uses: Roang-zero1/github-create-release-action@master
        with:
          version_regex: ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64 
        goos: [linux, windows, darwin]
        goarch: ["386", amd64]
        exclude:  
          - goarch: "386"
            goos: darwin 
    steps:
    - uses: actions/checkout@v2
    - uses: wangyoucao577/go-release-action@v1.19
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go1.15.15.linux-amd64.tar.gz"
        # project_path: "./c"
        binary_name: "libbimax.so"
        # build_flags: "-buildmode=c-shared"
        #
        build_command: "make shared"
        release_tag: v0.0.1
        extra_files: libbimax.h
